version: ~> 1.0
language: cpp
os: linux
dist: xenial
branches:
  except:
    - /^(wip\/)?(appveyor|msvc|mingw|windows)(\-.+)?$/

addons:
  apt:
    sources: &default_sources
    packages: &default_pacakges

env:
  global:
# fix clang complaining about unused command line args with ccache, see http://peter.eisentraut.org/blog/2014/12/01/ccache-and-clang-part-3/
    - CCACHE_CPP2=yes
    - LIBPFC_TARGET=libpfc.so

cache: ccache

jobs:
  include:
      # clang-5.0 is the default installed on travis VMs
    - compiler: clang-default
      env: TRUE_CC=clang TRUE_CXX=clang++ CXXFLAGS=-stdlib=libc++
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-5.0
          packages:
            - *default_pacakges
            - libc++abi1
            - libc++1
    - compiler: gcc-default
      env: TRUE_CC=gcc TRUE_CXX=g++ PIE=
    - compiler: nasm-test
      env: TRUE_CC=gcc TRUE_CXX=g++ PIE=
      script:
        - ./scripts/travis-build.sh
        - ./scripts/test-nasm.sh
    - compiler: gcc-4.9
      env: TRUE_CC=gcc-4.9 TRUE_CXX=g++-4.9 PIE=
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-4.9
            - g++-4.9
    - compiler: gcc-6
      env: TRUE_CC=gcc-6 TRUE_CXX=g++-6
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-6
            - g++-6
    - compiler: gcc-7
      env: TRUE_CC=gcc-7 TRUE_CXX=g++-7
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-7
            - g++-7
    - compiler: gcc-8
      env: TRUE_CC=gcc-8 TRUE_CXX=g++-8
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-8
            - g++-8
    - compiler: gcc-9
      env: TRUE_CC=gcc-9 TRUE_CXX=g++-9
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-9
            - g++-9
    - compiler: clang-6.0
      env: TRUE_CC=clang-6.0 TRUE_CXX=clang++-6.0
      addons:
        apt:
          sources:
            - *default_sources
            - llvm-toolchain-xenial-6.0
          packages:
            - *default_pacakges
            - clang-6.0
            - clang++-6.0
    - compiler: clang-7
      env: TRUE_CC=clang-7 TRUE_CXX=clang++-7
      addons:
        apt:
          sources:
            - *default_sources
            - llvm-toolchain-xenial-7
          packages:
            - *default_pacakges
            - clang-7
            - clang++-7
    - compiler: clang-8
      env: TRUE_CC=clang-8 TRUE_CXX=clang++-8
      addons:
        apt:
          sources:
            - *default_sources
            - llvm-toolchain-xenial-8
          packages:
            - *default_pacakges
            - clang-8
            - clang++-8
    - compiler: gcc-6-kmod
      # this matrix entry builds the full kernel module
      env: TRUE_CC=gcc-6 TRUE_CXX=g++-6 LIBPFC_TARGET="libpfc.so pfc.ko"
      addons:
        apt:
          sources:
            - *default_sources
            - ubuntu-toolchain-r-test
          packages:
            - *default_pacakges
            - gcc-6
            - g++-6
      script:
          - sudo apt-get install -y linux-headers-$(uname -r)
          - ./scripts/travis-run.sh

before_install:
# Travis will set CC and CXX after the env commands specified in the matrix are run, overwriting whatever
# we've specified there, so we need to reset them here. See also https://github.com/travis-ci/travis-ci/issues/6633 .
  - CC="ccache ${TRUE_CC:-$CC}"
  - CXX="ccache ${TRUE_CXX:-$CXX}"

script:
  - ./scripts/travis-run.sh
